[{"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\index.js":"1","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\store.js":"2","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\App.js":"3","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\LoginScreen.js":"8","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Header.js":"9","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductScreen.js":"11","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\orderReducers.js":"12","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\PaymentScreen.js":"13","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\HomeScreen.js":"14","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\RegisterScreen.js":"15","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ShippingScreen.js":"16","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\UserListScreen.js":"18","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\OrderScreen.js":"19","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\CartScreen.js":"20","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"21","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\UserEditScreen.js":"22","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductEditScreen.js":"23","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\OrderListScreen.js":"24","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductListScreen.js":"25","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Loader.js":"26","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Message.js":"27","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\FormContainer.js":"28","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\SearchBox.js":"29","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Rating.js":"30","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Paginate.js":"32","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Product.js":"33","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\ProductCarousel.js":"34","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\productConstants.js":"35","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\cartConstants.js":"36","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\userConstants.js":"37","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\orderConstants.js":"38","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\productActions.js":"39","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\orderActions.js":"40","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\userActions.js":"42","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\Liquid.js":"43","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\NavbarCategoryDropdown.js":"44"},{"size":594,"mtime":1616789579000,"results":"45","hashOfConfig":"46"},{"size":2417,"mtime":1616789579000,"results":"47","hashOfConfig":"46"},{"size":2305,"mtime":1710395021567,"results":"48","hashOfConfig":"46"},{"size":362,"mtime":1616789579000,"results":"49","hashOfConfig":"46"},{"size":4080,"mtime":1616789579000,"results":"50","hashOfConfig":"46"},{"size":1486,"mtime":1616789579000,"results":"51","hashOfConfig":"46"},{"size":3926,"mtime":1616789579000,"results":"52","hashOfConfig":"46"},{"size":2484,"mtime":1710218876815,"results":"53","hashOfConfig":"46"},{"size":3721,"mtime":1710389707034,"results":"54","hashOfConfig":"46"},{"size":1134,"mtime":1708641606277,"results":"55","hashOfConfig":"46"},{"size":7964,"mtime":1710456835270,"results":"56","hashOfConfig":"46"},{"size":4079,"mtime":1616789579000,"results":"57","hashOfConfig":"46"},{"size":1467,"mtime":1708405234622,"results":"58","hashOfConfig":"46"},{"size":1867,"mtime":1710395182127,"results":"59","hashOfConfig":"46"},{"size":4041,"mtime":1710219079875,"results":"60","hashOfConfig":"46"},{"size":2612,"mtime":1708405139671,"results":"61","hashOfConfig":"46"},{"size":5353,"mtime":1708403767960,"results":"62","hashOfConfig":"46"},{"size":2723,"mtime":1708406791059,"results":"63","hashOfConfig":"46"},{"size":7099,"mtime":1709075972083,"results":"64","hashOfConfig":"46"},{"size":3668,"mtime":1708994165650,"results":"65","hashOfConfig":"46"},{"size":5076,"mtime":1709078606210,"results":"66","hashOfConfig":"46"},{"size":3147,"mtime":1708468475941,"results":"67","hashOfConfig":"46"},{"size":6038,"mtime":1710290321419,"results":"68","hashOfConfig":"46"},{"size":2526,"mtime":1708401830548,"results":"69","hashOfConfig":"46"},{"size":4073,"mtime":1708407907195,"results":"70","hashOfConfig":"46"},{"size":386,"mtime":1708404401683,"results":"71","hashOfConfig":"46"},{"size":228,"mtime":1616789579000,"results":"72","hashOfConfig":"46"},{"size":378,"mtime":1616789579000,"results":"73","hashOfConfig":"46"},{"size":822,"mtime":1710219865906,"results":"74","hashOfConfig":"46"},{"size":1886,"mtime":1616789579000,"results":"75","hashOfConfig":"46"},{"size":1239,"mtime":1708404966465,"results":"76","hashOfConfig":"46"},{"size":1836,"mtime":1709610020048,"results":"77","hashOfConfig":"46"},{"size":886,"mtime":1710290616937,"results":"78","hashOfConfig":"46"},{"size":778,"mtime":1710394837859,"results":"79","hashOfConfig":"46"},{"size":1719,"mtime":1710207686008,"results":"80","hashOfConfig":"46"},{"size":287,"mtime":1616789579000,"results":"81","hashOfConfig":"46"},{"size":1479,"mtime":1616789579000,"results":"82","hashOfConfig":"46"},{"size":1240,"mtime":1616789579000,"results":"83","hashOfConfig":"46"},{"size":6593,"mtime":1710207669260,"results":"84","hashOfConfig":"46"},{"size":5091,"mtime":1709075439997,"results":"85","hashOfConfig":"46"},{"size":1225,"mtime":1708997820126,"results":"86","hashOfConfig":"46"},{"size":6430,"mtime":1710127952877,"results":"87","hashOfConfig":"46"},{"size":1788,"mtime":1709531659932,"results":"88","hashOfConfig":"46"},{"size":667,"mtime":1709527139111,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"qgtjkt",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\index.js",[],["196","197"],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\store.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\App.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Header.js",["198"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport { logout } from \"../actions/userActions\";\nimport { listProducts } from \"../actions/productActions\";\nimport logo from \"./logo.png\";\nimport \"./styles.css\";\n\nfunction Header() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  const productCategories = [\n    \"lipstick\",\n    \"iquid\",\n    \"Pencil\",\n    \"Powder\",\n    \"Palette\",\n    \"Cream\",\n    \"Mineral\",\n    \"Lip Stain\",\n    \"BB Cream o CC Cream\",\n    \"Lip Gloss\",\n    \"Concealer\",\n    \"Highlighter\",\n    \"Contour\",\n    \"Gel\",\n    \"Otros\",\n  ];\n\n  return (\n    <header>\n      <Navbar\n        className=\"navbar-dar\"\n        bg=\"white\"\n        variant=\"dark\"\n        expand=\"lg\"\n        collapseOnSelect\n      >\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img\n                src={logo}\n                height=\"65\"\n                className=\"d-inline-block align-top\"\n                alt=\"Logo\"\n              />\n              <br />\n            </Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"Productos\" id=\"products\">\n                {productCategories.map((category, index) => (\n                  <LinkContainer\n                    key={index}\n                    to={`/api/products/${category.toLowerCase()}`}\n                  >\n                    <NavDropdown.Item>{category}</NavDropdown.Item>\n                  </LinkContainer>\n                ))}\n              </NavDropdown>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Perfil</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Salir\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i></i>Inicia sesión\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              <LinkContainer to=\"/login\">\n                <Nav.Link>\n                  <i></i>\n                </Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Carrito\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenue\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Usuarios</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Productos</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Ordenes</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <br />\n    </header>\n  );\n}\n\nexport default Header;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductScreen.js",["199"],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\PaymentScreen.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Selecciona metodo</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal o Tarjeta de crédito\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continuar\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\HomeScreen.js",["201"],"// HomeScreen.js\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport imagen1 from \"./imagen1.png\";\nimport { listProducts } from \"../actions/productActions\";\nimport \"./styles.css\";\n\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n  const [category, setCategory] = useState(\"\");\n\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, category));\n  }, [dispatch, keyword, category]);\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  return (\n    <div>\n      {!keyword && <ProductCarousel />}\n\n      <h1>Últimos productos</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row className=\"h\">\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <div className=\"products\">\n                  <Product product={product} />\n                </div>\n              </Col>\n            ))}\n          </Row>\n          <img\n            src={imagen1}\n            alt=\"Imagen 1\"\n            style={{ width: \"100%\", display: \"block\" }}\n          />\n          <br />\n          <br />\n          <br />\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\RegisterScreen.js",["202"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register } from \"../actions/userActions\";\nimport \"./styles.css\";\n\nfunction RegisterScreen({ location, history }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [last_name, setLast_name] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"La contraseña no coincide\");\n    } else {\n      dispatch(register(name, email, password, last_name));\n    }\n  };\n\n  return (\n    <div className=\"f\">\n      <FormContainer className=\"reg\">\n        <br />\n        <br />\n        <br />\n        <h1>Regístrate</h1>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Ingresa nombre\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"apellido\">\n            <Form.Label>Apellido</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Ingresa apellido\"\n              value={last_name}\n              onChange={(e) => setLast_name(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Correo electronico</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Ingresa correo electronico\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Contraseña</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"Ingresa contraseña\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirma contraseña</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"Confirma contraseña\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Regístrate\n          </Button>\n        </Form>\n\n        <Row className=\"py-3\">\n          <Col>\n            ¿Ya tienes cuenta?{\" \"}\n            <Link\n              className=\"ab\"\n              to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\n            >\n              Iniciar sesión\n            </Link>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <br />\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ShippingScreen.js",["203"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\n\nfunction ShippingScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Envío</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Dirección</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Ingresa dirección\"\n            value={address ? address : \"\"}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>Ciudad</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Ingresa ciudad\"\n            value={city ? city : \"\"}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Codigo postal</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Ingresa codigo postal\"\n            value={postalCode ? postalCode : \"\"}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>País</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Ingresa país\"\n            value={country ? country : \"\"}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continuar\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ShippingScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProfileScreen.js",["204","205"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nfunction ProfileScreen({ history }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"La contraseña no coincide\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Perfil de usuario</h2>\n\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Ingresa nombre\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Correo electronico</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Ingresa correo electronico\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Contraseña</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Ingresa contraseña\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirmar contraseña</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirmar contraseña\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Actualizar\n          </Button>\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>Mis ordenes</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Fecha</th>\n                <th>Total</th>\n                <th>Pago</th>\n                <th>Entregado</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\UserListScreen.js",["206"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nfunction UserListScreen({ history }) {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"¿Estas seguro de querer eliminar este usuario?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <div>\n      <h1>Usuarios</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NOMBRE</th>\n              <th>CORREO</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default UserListScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\OrderScreen.js",["207"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nfunction OrderScreen({ match, history }) {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    if (\n      !order ||\n      successPay ||\n      order._id !== Number(orderId) ||\n      successDeliver\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Orden: {order.Id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Envio</h2>\n              <p>\n                <strong>Nombre: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Correo electronico: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Dirección: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}\n                {\"  \"}\n                {order.shippingAddress.postalCode},{\"  \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Entregado en {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">No entregado</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Metodo de pago</h2>\n              <p>\n                <strong>Metodo: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Pagado en {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"warning\">No pagado</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Productos</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Orden vacia</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image_url}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Resumen del pedido</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Productos:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Envio:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n            {loadingDeliver && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Marcar como entregado\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\CartScreen.js",["208","209","210"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  img,\n  Form,\n  Button,\n  Card,\n  Image_url,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nfunction CartScreen({ match, location, history }) {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Carrito de compras</h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"info\">\n            Tu carrito esta vacio <br></br>\n            <Link to=\"/\">Regresar</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <img\n                      src={item.image_url}\n                      alt={item.name}\n                      className=\"img-fluid rounded\"\n                    />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n\n                  <Col md={2}>${item.price}</Col>\n\n                  <Col md={3}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n\n                  <Col md={1}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n          </ListGroup>\n\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n            >\n              Realizar pedido\n            </Button>\n          </ListGroup.Item>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CartScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\PlaceOrderScreen.js",["211","212"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n\nfunction PlaceOrderScreen({ history }) {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [success, history]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Dirección</h2>\n\n              <p>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"  \"}\n                {cart.shippingAddress.postalCode},{\"  \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Metodo de pago</h2>\n              <p>{cart.paymentMethod}</p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Productos</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Tu carrito esta vacio</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Resumen de la orden</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Productos:</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Envio:</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Impuestos:</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Realizar orden\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\UserEditScreen.js",["213"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nfunction UserEditScreen({ match, history }) {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/userlist\">Regresar</Link>\n\n      <FormContainer>\n        <h1>Editar usuario</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Ingresa nombre\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Correo electronico</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Ingresa correo electronico\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Es Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Actualizar\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default UserEditScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\OrderListScreen.js",["214"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\nfunction OrderListScreen({ history }) {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <div>\n      <h1>Ordenes</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USUARIO</th>\n              <th>FECHA</th>\n              <th>TOTAL</th>\n              <th>PAGO</th>\n              <th>ENTREGADO</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Detalles\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default OrderListScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\ProductListScreen.js",["215"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductListScreen({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"¿Estas seguro de querer eliminar el producto?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Productos</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Crear producto\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NOMBRE</th>\n                <th>PRECIO</th>\n                <th>CATEGORIA</th>\n                <th>MARCA</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\productActions.js",["216"],"import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_CATEGORY_REQUEST,\n  PRODUCT_CATEGORY_SUCCESS,\n  PRODUCT_CATEGORY_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts =\n  (keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(`/api/products${keyword}`);\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\nexport const listCategoryProducts =\n  (category, keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_CATEGORY_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?category=${category}&keyword=${keyword}`\n      );\n\n      dispatch({\n        type: PRODUCT_CATEGORY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CATEGORY_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top/`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}/`,\n      product,\n      config\n    );\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews/`,\n        review,\n        config\n      );\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const CategorylistProducts =\n  (keyword = \"\", category = \"\", currentPage = 1, productsPerPage = 10) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&category=${category}&page=${currentPage}&limit=${productsPerPage}`\n      );\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\orderActions.js",["217","218","219"],"import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\actions\\userActions.js",["220"],"import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register =\n  (name, email, password, last_name) => async (dispatch) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST,\n      });\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/users/register/\",\n        { name: name, email: email, password: password, last_name: last_name },\n        config\n      );\n\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data,\n      });\n\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}/`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\screens\\Liquid.js",["221"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport { listProducts, listProductDetails } from \"../actions/productActions\";\r\n\r\nfunction Liquid() {\r\n  const dispatch = useDispatch();\r\n  const [setCategory] = useState(\"\");\r\n  const { error, loading, products, page, pages } = listProducts;\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product } = productDetails;\r\n\r\n  // Definir la categoría a filtrar\r\n  const category = \"pencil\";\r\n\r\n  useEffect(() => {\r\n    // Realizar la solicitud de productos con la categoría especificada\r\n    dispatch(listProductDetails(\"\", category));\r\n  }, [dispatch, category]);\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(product.category); // Actualizar el estado de la categoría al cambiar la selección del usuario\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ProductCarousel />\r\n\r\n      <h1>Últimos productos de la categoría \"Pencil\"</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row className=\"h\">\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Liquid;\r\n","C:\\Users\\Viane\\Downloads\\proshop_django-master\\frontend\\src\\components\\NavbarCategoryDropdown.js",["222"],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":7,"column":10,"nodeType":"229","messageId":"230","endLine":7,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":153,"column":54,"nodeType":"233","messageId":"234","endLine":153,"endColumn":56},{"ruleId":"227","severity":1,"message":"235","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"236","line":26,"column":9,"nodeType":"229","messageId":"230","endLine":26,"endColumn":29},{"ruleId":"231","severity":1,"message":"237","line":35,"column":18,"nodeType":"233","messageId":"234","endLine":35,"endColumn":20},{"ruleId":"227","severity":1,"message":"235","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"238","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":51,"column":18,"nodeType":"233","messageId":"234","endLine":51,"endColumn":20},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":76,"column":6,"nodeType":"242","endLine":76,"endColumn":60,"suggestions":"243"},{"ruleId":"227","severity":1,"message":"244","line":8,"column":3,"nodeType":"229","messageId":"230","endLine":8,"endColumn":8},{"ruleId":"227","severity":1,"message":"245","line":9,"column":3,"nodeType":"229","messageId":"230","endLine":9,"endColumn":6},{"ruleId":"227","severity":1,"message":"246","line":13,"column":3,"nodeType":"229","messageId":"230","endLine":13,"endColumn":12},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"247","line":39,"column":6,"nodeType":"242","endLine":39,"endColumn":24,"suggestions":"248"},{"ruleId":"240","severity":1,"message":"249","line":43,"column":6,"nodeType":"242","endLine":43,"endColumn":44,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"251","line":135,"column":13,"nodeType":"229","messageId":"230","endLine":135,"endColumn":17},{"ruleId":"227","severity":1,"message":"252","line":12,"column":3,"nodeType":"229","messageId":"230","endLine":12,"endColumn":18},{"ruleId":"227","severity":1,"message":"253","line":16,"column":3,"nodeType":"229","messageId":"230","endLine":16,"endColumn":22},{"ruleId":"227","severity":1,"message":"254","line":23,"column":3,"nodeType":"229","messageId":"230","endLine":23,"endColumn":22},{"ruleId":"227","severity":1,"message":"255","line":17,"column":3,"nodeType":"229","messageId":"230","endLine":17,"endColumn":28},{"ruleId":"227","severity":1,"message":"236","line":26,"column":9,"nodeType":"229","messageId":"230","endLine":26,"endColumn":29},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'listProducts' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'handleCategoryChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["258"],"'Image' is defined but never used.","'img' is defined but never used.","'Image_url' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["260"],"'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"267","text":"268"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"269","text":"270"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"271","text":"272"},[2223,2277],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1265,1283],"[success, history, order._id, dispatch]",[1375,1413],"[user, userId, successUpdate, history, dispatch]"]